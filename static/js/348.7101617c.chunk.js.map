{"version":3,"file":"static/js/348.7101617c.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","redux/filter/selectors.js","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","pages/Contacts.js"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n","export const selectFilter = state => state.filter;\n","import styled from 'styled-components';\n\nexport const Input = styled.input`\n  display: block;\n  padding: 10px;\n  border-radius: 4px;\n  font-size: 22px;\n`;\nexport const Label = styled.label`\n  display: block;\n  padding: 10px;\n  border-radius: 4px;\n  font-size: 22px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/filter/filtersSlice';\nimport { selectFilter } from 'redux/filter/selectors';\n\nimport { Input, Label } from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const value = useSelector(selectFilter);\n  const onChangeFilter = e => {\n    dispatch(setFilter(e.currentTarget.value));\n  };\n  return (\n    <>\n      <h2>Contacts</h2>\n      <Label>\n        Filter contacts by name\n        <Input type=\"text\" value={value} onChange={onChangeFilter}></Input>\n      </Label>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  padding: 12px;\n  min-width: 400px;\n`;\nexport const Item = styled.li`\n  margin: 12px;\n  display: flex;\n  justify-content: space-between;\n`;\nexport const Label = styled.input`\n  display: block;\n  padding: 10px;\n  border-radius: 4px;\n  font-size: 22px;\n`;\nexport const Button = styled.button`\n  font-size: 13px;\n  margin-left: 15px;\n  padding: 6px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { selectFilter } from 'redux/filter/selectors';\nimport { Item, List, Button } from './ContactList.styled';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch(selectFilter);\n\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const visiableContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  return (\n    <List>\n      {visiableContacts.map(({ name, number, id }) => {\n        return (\n          <Item key={id}>\n            {name}: {number}\n            <Button\n              onClick={() => {\n                dispatch(deleteContact(id));\n              }}\n            >\n              Delete\n            </Button>\n          </Item>\n        );\n      })}\n    </List>\n  );\n};\n","import styled from 'styled-components';\nimport { Form as FormikForm, ErrorMessage as Error } from 'formik';\n\nexport const Form = styled(FormikForm)`\n  border: 1px solid black;\n  display: flex;\n  flex-direction: column;\n  padding: 12px;\n`;\nexport const ErrorMessage = styled(Error)`\n  color: red;\n  font-size: 13px;\n`;\nexport const Button = styled.button`\n  width: 150px;\n  font-size: 18px;\n  margin-left: 10px;\n`;\nexport const Input = styled.input`\n  display: block;\n  padding: 10px;\n  border-radius: 4px;\n  font-size: 22px;\n`;\nexport const Label = styled.label`\n  display: block;\n  padding: 10px;\n  border-radius: 4px;\n  font-size: 22px;\n`;\n","import React from 'react';\nimport { Formik, Field } from 'formik';\nimport PropTypes from 'prop-types';\nimport { Form, Button, ErrorMessage, Label, Input } from './ContactForm.styled';\nimport * as yup from 'yup';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nyup.addMethod(yup.string, 'validation', function () {\n  return this.matches(\n    \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\n    \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n  );\n});\nyup.addMethod(yup.string, 'numeric', function () {\n  return this.matches(\n    '^[+]?[(]?[0-9]{3}[)]?[-s.]?[0-9]{3}[-s.]?[0-9]{4,6}$',\n    'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n  );\n});\n\nconst Schema = yup.object().shape({\n  name: yup.string().validation().required(),\n  number: yup.string().numeric().required(),\n});\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const onChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n  const onSubmit = ({ name, number }) => {\n    const isExist = contacts.find(contact => contact.name === name);\n    if (isExist && number) {\n      window.alert(`${name} is already in contacts`);\n      return;\n    } else {\n      const contact = {\n        name,\n        number,\n      };\n      dispatch(addContact(contact));\n    }\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={{ name: '', number: '' }}\n        validationSchema={Schema}\n        onSubmit={values => {\n          onSubmit(values);\n          resetForm();\n        }}\n      >\n        <Form>\n          <Field as={Label}>\n            <span>Name</span>\n            <Field\n              as={Input}\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              onChange={onChange}\n            />\n            <ErrorMessage name=\"name\" component=\"div\" />\n          </Field>\n          <Field as={Label}>\n            <span>Number</span>\n            <Field\n              as={Input}\n              type=\"tel\"\n              name=\"number\"\n              value={number}\n              onChange={onChange}\n            />\n            <ErrorMessage name=\"number\" component=\"div\" />\n          </Field>\n\n          <Button type=\"submit\" disabled={!name || !number}>\n            Add contact\n          </Button>\n        </Form>\n      </Formik>\n    </>\n  );\n};\nContactForm.propTypes = {\n  onSubmit: PropTypes.func,\n  onChange: PropTypes.func,\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\n\nimport { fetchContacts } from 'redux/contacts/operations';\nimport {\n  selectContacts,\n  selectError,\n  selectIsLoading,\n} from 'redux/contacts/selectors';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { ContactForm } from 'components/ContactForm/ContactForm.jsx';\n\nexport default function Tasks() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const contacts = useSelector(selectContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <h2>Phonebook</h2>\n      <ContactForm />\n      {contacts.length === 0 && <p>You don't have any saved contacts yet</p>}\n      {contacts.length > 0 && <Filter />}\n      {isLoading && !error && <p>Refreshing...</p>}\n      {contacts.length > 0 && <ContactList />}\n    </>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","Input","styled","Label","Filter","dispatch","useDispatch","value","useSelector","type","onChange","e","setFilter","currentTarget","List","Item","Button","ContactList","visiableContacts","contact","name","toLowerCase","includes","map","number","id","onClick","deleteContact","Form","FormikForm","ErrorMessage","Error","yup","this","matches","Schema","shape","validation","required","numeric","ContactForm","useState","setName","setNumber","initialValues","validationSchema","onSubmit","values","isExist","find","window","alert","addContact","as","component","disabled","Tasks","useEffect","fetchContacts","Helmet","length"],"sourceRoot":""}